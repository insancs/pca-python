# -*- coding: utf-8 -*-
"""pca.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pbNE2RMaLyh3IPXNiPQB3cKBgSWEvzyf
"""

from sklearn import datasets
from sklearn.model_selection import train_test_split

# Load iris dataset
iris = datasets.load_iris()

# Separate attribute and label
atribut = iris.data
label = iris.target
iris

# separate training data and test data
X_train, X_test, y_train, y_test = train_test_split(atribut, label, test_size=0.2)

"""Kita akan menggunakan model Decision Tree dan menghitung berapa akurasinya tanpa menggunakan PCA."""

from sklearn import tree

# Call Decision Tree model
decision_tree = tree.DecisionTreeClassifier()
first_model = decision_tree.fit(X_train, y_train)
# Print accuracy
first_model.score(X_test, y_test)

"""Akurasi tanpa PCA adalah 0.9 atau 90%.
Kemudian kita akan menggunakan PCA dan menghitung variance dari setiap atribut.
"""

from sklearn.decomposition import PCA

# create a PCA object with 4 principal components
pca = PCA(n_components=4)

# PCA implementation on dataset
pca_attributes = pca.fit_transform(X_train)

# see the variance of each attribute
pca.explained_variance_ratio_

"""Hasilnya adalah 1 atribut memiliki variance sebesar 0.931, yang berarti atribut tersebut menyimpan informasi yang tinggi dan jauh lebih signifikan dari atribut lain.

Melihat dari variance sebelumnya kita bisa mengambil 2 principal component terbaik karena total variance nya adalah 0.977 yang sudah cukup tinggi.
"""

# PCA with 2 principal components
pca2 = PCA(n_components = 2)
X_train_pca = pca2.fit_transform(X_train)
X_test_pca = pca2.fit_transform(X_test)

# Testing accuracy
model2 = decision_tree.fit(X_train_pca, y_train)
model2.score(X_test_pca, y_test)

"""Dari percobaan di atas bisa kita lihat bahwa dengan hanya 2 principal component atau 2 atribut saja model masih memiliki akurasi yang cukup tinggi, yaitu 80%. Dengan principal component kamu bisa mengurangi atribut yang kurang signifikan dalam prediksi dan mempercepat waktu pelatihan sebuah model machine learning."""